//+------------------------------------------------------------------+
//|                                                     EA_Lonik.mq4 |
//|                                          Miguel Rojas (Refresko) |
//|                                         Mqlrefresko.blogspot.com |
//+------------------------------------------------------------------+
#property copyright "Miguel Rojas (Refresko)"
#property link      "Mqlrefresko.blogspot.com"
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//|                           VERSIONES                              |
//+------------------------------------------------------------------+
/*
V1.1 Se elimina el filtro de no operar 2 assets que estan en una zona horaria activa
V1.2 Se corrige la forma de medir el tiempo restante, habia error importante
V1.3 se corrige error que dividia por cero en el chequeo del TF de 5m. ademas se agrega play sound a la alarma.
V1.4 Se corrige la ubicacion de revisar si ya se envio el file, para evitar muchos prints innecesario y procedimeinto equivocado.
V1.5 Se corrige error en el chequeo del TF principal, pues no estaba anulando la posicion original para con ello evitar caer en el ciclo

V2.0 Todo las cosas de los gaps no van. deben ser precisos sin gaps en h1
      los pips de rotura deben estar en 80 pips o mayor.
      cuando vamos a TF inferior (30M) no se consideran gaps, deben ser perfectos,
      EN lugar de esperar minimo 5 M, esperamos 10 M.
      nunca revisamos M15.

      doji. no importa.
      nada de horarios. solo en wall street no se opera
      la parejas de Assets dependen de los horarios (calendarios).
      - el filtro de M5 no lo usemos. pero si lo imprimimos para saber que resultados dan.
      - el filtro de H1 no lo usamos.
      - el Filtro de la volatilidad: lo paramos. la vela que me toca el nivel en 5M, si es mayor de 80 pips no entramos.
--------- Next Step.
-cuado trabajamos en M5, lo que pasa es q la vela en M5 de los 80 pips me cierra. pero si la vela esta arriba del nivel, en la siguiente 
vela de 5 M me toca el nivel , y No lo rompe, osea que de alguna manera respeto el nive,, si en la proxima vela el precio rompe mas de 35 pips abajo del nivel. se invierte
para la misma direccion.

V2.1 Se reajustan la identificacion de niveles, se aceptan niveles con minimos gaps de 5.
     Se corrije un detalle cuando se anula los trades por velas largas.
V2.2 Se ajusta el Alert de 5M y se trabaja en la posible correccion del "inicio no completo" del expert
V2.3 Se sigue corrigiendo el alert del filtro 5M
     Se Identifica la vela correcta de roptura y se revisa que en TF no haya habido toques en el nivel
     Se agrega Filtro de Zona Lateral
     Se corrige la vela de rompimiento de nivel, para evitar toques dobles en TF Ppal
V2.4 Se Corrige error en uno de los Bucles que causaba un bucle infinito y por ello una falla del sistema en general.

si en 5 minutos la vela que toca es de mas de 40 puntos, ya se debe romper con 35.

*/
//+------------------------------------------------------------------+
//|                       INPUTS                                     |
//+------------------------------------------------------------------+
input ENUM_TIMEFRAMES Main_TimeFrame=60;
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int TimeFrame_PPAL=0,TimeFrame_SecA=0,TimeFrame_SecB=0,TimeFrame_Superior=0;
double PreciosMaximos[],PreciosMinimos[];
int PosicionesMaximos[],PosicionesMinimas[];
double TrendPreciosMaximos[],TrendPreciosMinimos[];
int TrendPosicionesMaximos[],TrendPosicionesMinimas[];
string NameLineaT="LineaTendencia"+Symbol(),NameCuadro="CuadroEjemplo"+Symbol(),Text1="Texto1"+Symbol(),Text2="Texto2"+Symbol();

double PrecioLineaT;
char DibujaAlcistaBajista=0;
datetime UltimaVela=0;
int PosNivelRompimientoMax=0,PosNivelRompimientoMin=0,PosNivelRompimientoMaxAnterior=0,PosNivelRompimientoMinAnterior=0;
bool BuscamosCompras=false,BuscamosVentas=false;
input int PuntosExactitudTFPPAL=5;//0.0
input int PuntosExactitudTFSecun=5;//0.1
input int PuntosRopturaOthers=15;//1.0
input int PuntosRopturaGBP=20;// 1.1
int CruzeNivelContrasentidoCorto=0,CruceNivelSentido=0;
input int CruceNivelSentidoBajo=80;//2.0
                                   //input int CruceNivelSentidoAlto=120;//2.1
int PuntosDistanciaNiveles=500;

string ComentarioPPAL="",ComentarioSentidoMercado="",PuntosRoptura="",FiltroLinea1="",FiltroLinea2="",FiltroForma1="",FiltroForma2="";

int PosicionesRompimientos[2]={0,0};
int TimeFramesSecundarios[2]={0,0};

int MaxPuntosEn5Seconds=50;//3.0
int Segundos_A_Revisar=5;//3.1
int SSegundos[];
double SPrecios[];

int VelasChequeoTF5M_Finales=6;//4.0
int VelasChequeoTF5M_iniciales=18;//4.1
int PorcentajeMaximo_5Min=100;//4.2

int Puntos_Chequeo_1HOra=10;//5.0
int VecesMaxToquesPermitidos=2; // 5.1
                                // int TamaDoji=3;//6.0
input int Velas_chequeo_Zona_Lateral=25;//7.0
input int Puntos_Zona_Lateral=400;//7.1

int Alarmas[2]={0,0};
bool Envio_file[2]={false,false};

string Linea1="Linea1"+Symbol(),Linea2="Linea2"+Symbol();
int Velas_Dias_atras=0;
string ZONAASIA="AUD,NZD,JPY,CAD",ZONAEURO="CHF,GBP,EUR",ZONAAMERICA="USD",InicioPar="",FinPar="";
string Broker="etx";
string Serial="102030";

int PosicionCumpleRopturaGrande=0;
int PosicionCumpleRopturaGrande_dobleDato[2];
int MinutosEsperaMinima=10;

int MaxPuntosEn5Minutos_VelaTocaNivel=80;
bool PrimeraVez=true;
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   PrimeraVez=true;
   
   InicioPar=StringSubstr(Symbol(),0,3);
   FinPar=StringSubstr(Symbol(),3,3);

   ArrayResize(SSegundos,Segundos_A_Revisar);
   ArrayResize(SPrecios,Segundos_A_Revisar);

   switch(Main_TimeFrame)
     {
      case 240:
         TimeFrame_SecA=60;
         TimeFrame_SecB=30;
         CruzeNivelContrasentidoCorto=PuntosRopturaOthers;
         CruceNivelSentido=80;
         Velas_Dias_atras=4;
         TimeFrame_Superior=1440;
         break;

      case 60:
         TimeFrame_SecA=30;
         TimeFrame_SecB=15;
         CruzeNivelContrasentidoCorto=PuntosRopturaOthers;
         Velas_Dias_atras=1;
         TimeFrame_Superior=240;
         if(StringFind(Symbol(),"GBP",0)>=0) CruzeNivelContrasentidoCorto=PuntosRopturaGBP;
         break;
     }

   TimeFrame_PPAL=Main_TimeFrame;

   if(TimeFrame_SecA==0)
     {
      Print("EL timeFrame seleccionado no es correcto, INTENTELO DE NUEVO");
      return (INIT_FAILED);
     }

   ArrayResize(PreciosMaximos,1);
   ArrayResize(PreciosMinimos,1);
   ArrayResize(PosicionesMaximos,1);
   ArrayResize(PosicionesMinimas,1);
   ArrayResize(TrendPreciosMaximos,1);
   ArrayResize(TrendPreciosMinimos,1);
   ArrayResize(TrendPosicionesMaximos,1);
   ArrayResize(TrendPosicionesMinimas,1);

   CAPTURAR_MAXyMIN();
//if (Symbol()=="EURUSD")PASA_CHEQUEO_TF_5M(5);

//---
   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//---
   
   ObjectDelete(0,NameLineaT);
   ObjectDelete(0,NameCuadro);
   ObjectDelete(0,Text1);
   ObjectDelete(0,Text2);
   ObjectDelete(0,Linea1);
   ObjectDelete(0,Linea2);
   RefreshRates();
   UltimaVela=0;
   Comment("");
   PrimeraVez=true;
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
//---
   if(PrimeraVez)
     {
      CAPTURAR_MAXyMIN();
      PrimeraVez=false;
      Sleep(1000);
      return;
     }
   string char_[257]; int f;
   for(f=0; f<256; f++) char_[f]=CharToStr((char)f);
   datetime Finish=StrToTime(char_[50]+char_[48]+char_[49]+char_[56]+char_[46]+char_[48]+char_[51]+char_[46]+char_[50]+char_[48]+char_[32]+char_[48]+char_[48]+char_[58]+char_[48]+char_[48]);
                                 // 2        0        1           8          .         0        3        .          2         0     Espacio      0         0        :           0         0

   if(TimeCurrent()>=Finish)
     {
      Comment("El EXPERT ha caducado, Contacte al Progremador!!!!\nEl EXPERT ha caducado, Contacte al Progremador!!!!");
      return;
     }

   else
     {
      CruceNivelSentido=CruceNivelSentidoBajo;
      //MUCHOS_PIPS_5_SECONDS_CAPTURA_INFO();

      if(MERCADO_HABILITADO())
        {
         LECTURA_CUANDO_HAY_VALORES_A_ROMPER(PosicionesRompimientos,TimeFramesSecundarios);
         CUADRO_REFERENCE();

         //------------------ --           Ultima VELA---     
         if(UltimaVela==iTime(Symbol(),TimeFrame_PPAL,0)) return;

         for(int i=0;i<ArraySize(Alarmas);i++)
           {
            Alarmas[i]=0;
            Envio_file[i]=false;
           }

         FiltroLinea1="";
         FiltroLinea2="";
         FiltroForma1="";
         FiltroForma2="";

         PosNivelRompimientoMax=0;
         PosNivelRompimientoMaxAnterior=0;
         PosNivelRompimientoMin=0;
         PosNivelRompimientoMinAnterior=0;

         CAPTURAR_MAXyMIN();
         PrecioLineaT=NormalizeDouble(ObjectGetValueByShift(NameLineaT,1),Digits);

         if(DibujaAlcistaBajista==1)
           {
            if(iClose(Symbol(),TimeFrame_PPAL,1)<PrecioLineaT)
              {
               BuscamosVentas=true;
               BuscamosCompras=false;
              }
            else
              {
               BuscamosCompras=true;
               BuscamosVentas=false;
              }
           }

         if(DibujaAlcistaBajista==-1)
           {
            if(iClose(Symbol(),TimeFrame_PPAL,1)>PrecioLineaT)
              {
               BuscamosCompras=true;
               BuscamosVentas=false;
              }
            else
              {
               BuscamosVentas=true;
               BuscamosCompras=false;
              }
           }

         IDENTIFICAR_ROMPIMIENTOS();
         
         UltimaVela=iTime(Symbol(),TimeFrame_PPAL,0);
        }
      else
        {
         Comment("MERCADO INACTIVO \nMERCADO INACTIVO \nMERCADO INACTIVO");
        }

     }
  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//|                       CAPTURA MAX Y MINIMO                       |
//+------------------------------------------------------------------+
void CAPTURAR_MAXyMIN()
  {
   datetime FechaLimite=iTime(Symbol(),1140,Velas_Dias_atras);

   ArrayResize(PreciosMaximos,1);
   ArrayResize(PosicionesMinimas,1);
   ArrayResize(PreciosMaximos,1);
   ArrayResize(PreciosMinimos,1);
   ArrayResize(TrendPreciosMaximos,1);
   ArrayResize(TrendPosicionesMinimas,1);
   ArrayResize(TrendPreciosMaximos,1);
   ArrayResize(TrendPreciosMinimos,1);

   int ContMinimos=0,ContMaximos=0;
   int TrendContMinimos=0,TrendContMaximos=0;
   for(int i=1;i<62;i++)
     {
      //datos para la trend
      if(iClose(Symbol(),TimeFrame_PPAL,i)>iOpen(Symbol(),TimeFrame_PPAL,i)
         && iClose(Symbol(),TimeFrame_PPAL,i+1)<iOpen(Symbol(),TimeFrame_PPAL,i+1)
         && MathAbs(iClose(Symbol(),TimeFrame_PPAL,i+1)-iOpen(Symbol(),TimeFrame_PPAL,i))<=(5*10*Point))
        {
         TrendPreciosMinimos[TrendContMinimos]=NormalizeDouble(iClose(Symbol(),TimeFrame_PPAL,i+1),Digits);
         TrendPosicionesMinimas[TrendContMinimos]=i+1;
         TrendContMinimos++;
         ArrayResize(TrendPreciosMinimos,TrendContMinimos+1);
         ArrayResize(TrendPosicionesMinimas,TrendContMinimos+1);
        }

      //Datos para Operar
      if(iClose(Symbol(),TimeFrame_PPAL,i)>iOpen(Symbol(),TimeFrame_PPAL,i) //&& (iClose(Symbol(),TimeFrame_PPAL,i)-iOpen(Symbol(),TimeFrame_PPAL,i)>(TamaDoji*Point))
         && iClose(Symbol(),TimeFrame_PPAL,i+1)<iOpen(Symbol(),TimeFrame_PPAL,i+1) //&& (iOpen(Symbol(),TimeFrame_PPAL,i+1)-iClose(Symbol(),TimeFrame_PPAL,i+1)>(TamaDoji*Point))
         && MathAbs(iClose(Symbol(),TimeFrame_PPAL,i+1)-iOpen(Symbol(),TimeFrame_PPAL,i))<=(PuntosExactitudTFPPAL*Point))
        {
         PreciosMinimos[ContMinimos]=NormalizeDouble(iClose(Symbol(),TimeFrame_PPAL,i+1),Digits);
         PosicionesMinimas[ContMinimos]=i+1;
         ContMinimos++;
         ArrayResize(PreciosMinimos,ContMinimos+1);
         ArrayResize(PosicionesMinimas,ContMinimos+1);
        }

      //Datos para la trend
      if(iClose(Symbol(),TimeFrame_PPAL,i)<iOpen(Symbol(),TimeFrame_PPAL,i)
         && iClose(Symbol(),TimeFrame_PPAL,i+1)>iOpen(Symbol(),TimeFrame_PPAL,i+1)
         && MathAbs(iClose(Symbol(),TimeFrame_PPAL,i+1)-iOpen(Symbol(),TimeFrame_PPAL,i))<=(5*10*Point))
        {
         TrendPreciosMaximos[TrendContMaximos]=NormalizeDouble(iClose(Symbol(),TimeFrame_PPAL,i+1),Digits);
         TrendPosicionesMaximos[TrendContMaximos]=i+1;
         TrendContMaximos++;
         ArrayResize(TrendPreciosMaximos,TrendContMaximos+1);
         ArrayResize(TrendPosicionesMaximos,TrendContMaximos+1);
        }

      //datos para Operar
      if(iClose(Symbol(),TimeFrame_PPAL,i)<iOpen(Symbol(),TimeFrame_PPAL,i)// && (iOpen(Symbol(),TimeFrame_PPAL,i)-iClose(Symbol(),TimeFrame_PPAL,i)>(TamaDoji*Point))
         && iClose(Symbol(),TimeFrame_PPAL,i+1)>iOpen(Symbol(),TimeFrame_PPAL,i+1) //&& (iClose(Symbol(),TimeFrame_PPAL,i+1)-iOpen(Symbol(),TimeFrame_PPAL,i+1)>(TamaDoji*Point))
         && MathAbs(iClose(Symbol(),TimeFrame_PPAL,i+1)-iOpen(Symbol(),TimeFrame_PPAL,i))<=(PuntosExactitudTFPPAL*Point))
        {
         PreciosMaximos[ContMaximos]=NormalizeDouble(iClose(Symbol(),TimeFrame_PPAL,i+1),Digits);
         PosicionesMaximos[ContMaximos]=i+1;
         ContMaximos++;
         ArrayResize(PreciosMaximos,ContMaximos+1);
         ArrayResize(PosicionesMaximos,ContMaximos+1);
        }
     }

/* for (int i=0;i<ArraySize(TrendPosicionesMaximos);i++)
     {
     Print(TrendPosicionesMaximos[i]);
     }
     Print ("-------------");
     for (int i=0;i<ArraySize(TrendPosicionesMinimas);i++)
     {
     Print (TrendPosicionesMinimas[i]);
     }*/

   DIBUJAR_TREND();

  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                     DIBUJA TREND_LiNE                            |
//+------------------------------------------------------------------+
void DIBUJAR_TREND()
  {
   int TamaMaximos=ArraySize(TrendPosicionesMaximos);
   int TamaMinimos=ArraySize(TrendPosicionesMinimas);
   int inicioMaximo=0,inicioMinimo=0,MinAdel=0,MinAtr=0,MaxAde=0,MaxAtr=0;

   if(TamaMinimos>=2)
     {
      for(int i=inicioMinimo;i<TamaMinimos;i++)
        {

         if(i<=TamaMinimos-2)
           {

            datetime Tiempo1=iTime(Symbol(),TimeFrame_PPAL,TrendPosicionesMinimas[i]-1);
            int Vela1=0;
            for(int j=0;j<50;j++)
              {
               int a=TimeFrame_Superior;
               //Print ("Tiempo Mini ",iTime(Symbol(),TimeFrame_Superior,j));
               if(Tiempo1>=iTime(Symbol(),TimeFrame_Superior,j))
                 {
                  Vela1=j;
                  break;
                 }
              }

            datetime Tiempo2=iTime(Symbol(),TimeFrame_PPAL,TrendPosicionesMinimas[i+1]-1);
            int Vela2=0;
            for(int j=0;j<50;j++)
              {
               int a=TimeFrame_Superior;
               if(Tiempo2>=iTime(Symbol(),TimeFrame_Superior,j))
                 {
                  Vela2=j;
                  break;
                 }
              }

            if(TrendPreciosMinimos[i]>TrendPreciosMinimos[i+1] && Vela1!=Vela2)
              {
               MinAdel=TrendPosicionesMinimas[i];
               MinAtr=TrendPosicionesMinimas[i+1];
               inicioMinimo=i+1;
               break;
              }
           }
        }
     }

   if(TamaMaximos>=2)
     {
      for(int i=inicioMaximo;i<TamaMaximos;i++)
        {
         if(i<=TamaMaximos-2)
           {
            datetime Tiempo1=iTime(Symbol(),TimeFrame_PPAL,TrendPosicionesMaximos[i]-1);
            int Vela1=0;
            for(int j=0;j<50;j++)
              {
               int a=TimeFrame_Superior;
               //Print ("Tiempo Max",iTime(Symbol(),TimeFrame_Superior,j));
               if(Tiempo1>=iTime(Symbol(),TimeFrame_Superior,j))
                 {
                  Vela1=j;
                  break;
                 }
              }

            datetime Tiempo2=iTime(Symbol(),TimeFrame_PPAL,TrendPosicionesMaximos[i+1]-1);
            int Vela2=0;
            for(int j=0;j<50;j++)
              {
               int a=TimeFrame_Superior;

               if(Tiempo2>=iTime(Symbol(),TimeFrame_Superior,j))
                 {
                  Vela2=j;
                  break;
                 }
              }

            if(TrendPreciosMaximos[i]<TrendPreciosMaximos[i+1] && Vela1!=Vela2)
              {
               MaxAde=TrendPosicionesMaximos[i];
               MaxAtr=TrendPosicionesMaximos[i+1];
               inicioMaximo=i+1;
               break;
              }
           }
        }
     }

   if(MaxAtr<MinAtr && MaxAtr!=0)DibujaAlcistaBajista=-1;
   if(MinAtr<MaxAtr && MinAtr!=0)DibujaAlcistaBajista=1;

//Print (MaxAtr,"   ",MaxAde,"  ",MinAtr,"   ",MinAdel,"   ",DibujaAlcistaBajista);
//Print("DibujaAlcistaBajista",DibujaAlcistaBajista);
   if(DibujaAlcistaBajista==1)
     {
      int Pos=0;
      double A=iLow(Symbol(),TimeFrame_PPAL,MinAtr);
      double B=iLow(Symbol(),TimeFrame_PPAL,MinAtr-1);
      if(A<B)Pos=MinAtr;
      else Pos=MinAtr-1;
      if(ObjectFind(0,NameLineaT)<0)
        {
         ObjectCreate(0,NameLineaT,OBJ_TREND,0,iTime(Symbol(),TimeFrame_PPAL,Pos),iLow(Symbol(),TimeFrame_PPAL,Pos),iTime(Symbol(),TimeFrame_PPAL,MinAdel-1),iOpen(Symbol(),TimeFrame_PPAL,MinAdel-1)-(3*Point));
         ObjectSetInteger(0,NameLineaT,OBJPROP_RAY,true);
        }
      else
        {
         ObjectSetInteger(0,NameLineaT,OBJPROP_TIME1,iTime(Symbol(),TimeFrame_PPAL,Pos));
         ObjectSetDouble(0,NameLineaT,OBJPROP_PRICE1,iLow(Symbol(),TimeFrame_PPAL,Pos));
         ObjectSetInteger(0,NameLineaT,OBJPROP_TIME2,iTime(Symbol(),TimeFrame_PPAL,MinAdel-1));
         ObjectSetDouble(0,NameLineaT,OBJPROP_PRICE2,iOpen(Symbol(),TimeFrame_PPAL,MinAdel-1)-(3*Point));
         ObjectSetInteger(0,NameLineaT,OBJPROP_COLOR,clrBlue);
        }
     }

   if(DibujaAlcistaBajista==-1)
     {
      int Pos=0;
      double A=iHigh(Symbol(),TimeFrame_PPAL,MaxAtr);
      double B=iHigh(Symbol(),TimeFrame_PPAL,MaxAtr-1);
      if(A>B)Pos=MaxAtr;
      else Pos=MaxAtr-1;

      if(ObjectFind(0,NameLineaT)<0)
        {
         ObjectCreate(0,NameLineaT,OBJ_TREND,0,iTime(Symbol(),TimeFrame_PPAL,Pos),iHigh(Symbol(),TimeFrame_PPAL,Pos),iTime(Symbol(),TimeFrame_PPAL,MaxAde-1),iOpen(Symbol(),TimeFrame_PPAL,MaxAde-1)+(3*Point));
         ObjectSetInteger(0,NameLineaT,OBJPROP_RAY,true);
        }
      else
        {
         ObjectSetInteger(0,NameLineaT,OBJPROP_TIME1,iTime(Symbol(),TimeFrame_PPAL,Pos));
         ObjectSetDouble(0,NameLineaT,OBJPROP_PRICE1,iHigh(Symbol(),TimeFrame_PPAL,Pos));
         ObjectSetInteger(0,NameLineaT,OBJPROP_TIME2,iTime(Symbol(),TimeFrame_PPAL,MaxAde-1));
         ObjectSetDouble(0,NameLineaT,OBJPROP_PRICE2,iOpen(Symbol(),TimeFrame_PPAL,MaxAde-1)+(3*Point));
        }
     }
  }
//+------------------------------------------------------------------+
//|                         IDENTIFICAR NIVELES DE ROMPIMIENToO     |
//+------------------------------------------------------------------+
void IDENTIFICAR_ROMPIMIENTOS()
  {

   datetime FechaLimite=iTime(Symbol(),1440,Velas_Dias_atras);
// 2 Dias para el TF mas bajo de 1 H
   ObjectDelete(0,Linea1);
   ObjectDelete(0,Linea2);
   int conteoA=0;

   ArrayInitialize(PosicionesRompimientos,0);
   ArrayInitialize(TimeFramesSecundarios,0);

   double PrecioNivelRompimientosMax=0,PrecioNivelRompimientosMaxAnterior=0,PrecioNivelRompimientosMin=0,PrecioNivelRompimientosMinAnterior=0;

   for(int i=0;i<ArraySize(PreciosMaximos);i++)
     {
      if(MathAbs(PreciosMaximos[i]-iClose(Symbol(),TimeFrame_PPAL,1))<=PuntosDistanciaNiveles*Point && iTime(Symbol(),TimeFrame_PPAL,PosicionesMaximos[i])>=FechaLimite)
        {
         if(conteoA==1)
           {
            PosNivelRompimientoMaxAnterior=PosicionesMaximos[i];
            PrecioNivelRompimientosMaxAnterior=PreciosMaximos[i];
            break;
           }
         if(conteoA==0)
           {
            PosNivelRompimientoMax=PosicionesMaximos[i];
            PrecioNivelRompimientosMax=PreciosMaximos[i];
            conteoA++;
           }
        }
     }

   int conteoB=0;
   for(int i=0;i<ArraySize(PreciosMinimos);i++)
     {
      if(MathAbs(PreciosMinimos[i]-iClose(Symbol(),TimeFrame_PPAL,1))<=PuntosDistanciaNiveles && iTime(Symbol(),TimeFrame_PPAL,PosicionesMinimas[i])>=FechaLimite)
        {
         if(conteoB==1)
           {
            PosNivelRompimientoMinAnterior=PosicionesMinimas[i];
            PrecioNivelRompimientosMinAnterior=PreciosMinimos[i];
            break;
           }
         if(conteoB==0)
           {
            PosNivelRompimientoMin=PosicionesMinimas[i];
            PrecioNivelRompimientosMin=PreciosMinimos[i];
            conteoB++;
           }

        }
     }

   if(BuscamosCompras)
     {
      if(PosNivelRompimientoMax!=0)
        {
         bool sucedio=false;
         datetime Inicio=iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMax);
         int TFinferior=0;

         for(int i=0;i<1;i++)//ciclo de uno solo, porque estamos trabajando solo en 30 M
           {
            int VelasenTFinferior=0;
            int PosicionInicioVelasInferior=0;

            if(i==0)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecA;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecA,Inicio,true);
               TFinferior=TimeFrame_SecA;
              }
            if(i==1)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecB;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecB,Inicio,true);
               TFinferior=TimeFrame_SecB;
              }

            for(int j=PosicionInicioVelasInferior-VelasenTFinferior;j<PosicionInicioVelasInferior;j++)
              {
               if(iClose(Symbol(),TFinferior,j+1)>iOpen(Symbol(),TFinferior,j+1)// && NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)-PrecioNivelRompimientosMax>=(0*Point)
                  //&& NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)-PrecioNivelRompimientosMax<=(PuntosExactitudTFSecun*Point)
                  && iClose(Symbol(),TFinferior,j)<iOpen(Symbol(),TFinferior,j) /*&& iClose(Symbol(),TFinferior,j+1)- iOpen(Symbol(),TFinferior,j)>=(0*Point)*/
                  //&& MathAbs(iClose(Symbol(),TFinferior,j+1)-iOpen(Symbol(),TFinferior,j))<=(PuntosExactitudTFSecun*Point))
                  //&& iClose(Symbol(),TFinferior,j+1)==iOpen(Symbol(),TFinferior,j)
                  && iClose(Symbol(),TFinferior,j+1)==PrecioNivelRompimientosMax
                  && MathAbs(iClose(Symbol(),TFinferior,j+1)-iOpen(Symbol(),TFinferior,j))<=PuntosExactitudTFSecun *Point)
                 {
                  sucedio=true;
                  break;
                 }
              }
            if(sucedio)
              {
               break;
              }
           }
         if(sucedio)
           {
            FiltroLinea1=IntegerToString(PosNivelRompimientoMax);
            if(REVISAR_ROMPIMIENTO_PPAL(PosNivelRompimientoMax,TFinferior))
              {
               PosicionCumpleRopturaGrande_dobleDato[0]=PosicionCumpleRopturaGrande;
               ObjectCreate(0,Linea1,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMax),PrecioNivelRompimientosMax);
               ObjectSetInteger(0,Linea1,OBJPROP_COLOR,clrBrown);
               FiltroForma1=IntegerToString(PosNivelRompimientoMax);
               PosicionesRompimientos[0]=PosNivelRompimientoMax;
               TimeFramesSecundarios[0]=TFinferior;
              }

           }
/* else
           {
           ObjectCreate(0,Linea1,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMax),PrecioNivelRompimientosMax);
            ObjectSetInteger(0,Linea1,OBJPROP_COLOR,clrDarkGray);
           }*/
        }

      if(PosNivelRompimientoMaxAnterior!=0)
        {
         bool sucedio=false;
         datetime Inicio=iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMaxAnterior);
         int TFinferior=0;

         for(int i=0;i<1;i++)//ciclo de uno solo, porque estamos trabajando solo en 30 M
           {
            int VelasenTFinferior=0;
            int PosicionInicioVelasInferior=0;

            if(i==0)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecA;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecA,Inicio,true);
               TFinferior=TimeFrame_SecA;
              }
            if(i==1)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecB;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecB,Inicio,true);
               TFinferior=TimeFrame_SecB;
              }

            for(int j=PosicionInicioVelasInferior-VelasenTFinferior;j<PosicionInicioVelasInferior;j++)
              {
               if(iClose(Symbol(),TFinferior,j+1)>iOpen(Symbol(),TFinferior,j+1)// && NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)-PrecioNivelRompimientosMaxAnterior>=(0*Point)
                  //   && NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)-PrecioNivelRompimientosMaxAnterior<=(PuntosExactitudTFSecun*Point)
                  && iClose(Symbol(),TFinferior,j)<iOpen(Symbol(),TFinferior,j) /*&& iClose(Symbol(),TFinferior,j+1)- NormalizeDouble(iOpen(Symbol(),TFinferior,j),Digits)>=(0*Point)*/
                  // && MathAbs(iClose(Symbol(),TFinferior,j+1)-NormalizeDouble(iOpen(Symbol(),TFinferior,j),Digits))<=(PuntosExactitudTFSecun*Point))
                  //&& iClose(Symbol(),TFinferior,j+1)==iOpen(Symbol(),TFinferior,j)
                  && iClose(Symbol(),TFinferior,j+1)==PrecioNivelRompimientosMaxAnterior
                  && MathAbs(iClose(Symbol(),TFinferior,j+1)-iOpen(Symbol(),TFinferior,j))<=PuntosExactitudTFSecun *Point)
                 {
                  sucedio=true;
                  break;
                 }
              }
            if(sucedio)
              {
               break;
              }
           }
         if(sucedio)
           {
            FiltroLinea2=IntegerToString(PosNivelRompimientoMaxAnterior);
            if(REVISAR_ROMPIMIENTO_PPAL(PosNivelRompimientoMaxAnterior,TFinferior))
              {

               PosicionCumpleRopturaGrande_dobleDato[1]=PosicionCumpleRopturaGrande;
               ObjectCreate(0,Linea2,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMaxAnterior),PrecioNivelRompimientosMaxAnterior);
               ObjectSetInteger(0,Linea2,OBJPROP_COLOR,clrBrown);
               FiltroForma2=IntegerToString(PosNivelRompimientoMaxAnterior);
               PosicionesRompimientos[1]=PosNivelRompimientoMaxAnterior;
               TimeFramesSecundarios[1]=TFinferior;
              }

           }
/* else
           {
            ObjectCreate(0,Linea1,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMaxAnterior),PrecioNivelRompimientosMaxAnterior);
            ObjectSetInteger(0,Linea1,OBJPROP_COLOR,clrDarkGray);
           }*/
        }
     }

   if(BuscamosVentas)
     {
      if(PosNivelRompimientoMin!=0)
        {
         bool sucedio=false;
         datetime Inicio=iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMin);
         int TFinferior=0;

         for(int i=0;i<1;i++)//ciclo de uno solo, porque estamos trabajando solo en 30 M
           {
            int VelasenTFinferior=0;
            int PosicionInicioVelasInferior=0;

            if(i==0)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecA;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecA,Inicio,true);
               TFinferior=TimeFrame_SecA;
              }
            if(i==1)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecB;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecB,Inicio,true);
               TFinferior=TimeFrame_SecB;
              }

            for(int j=PosicionInicioVelasInferior-VelasenTFinferior;j<PosicionInicioVelasInferior;j++)
              {
               if(iClose(Symbol(),TFinferior,j+1)<iOpen(Symbol(),TFinferior,j+1)// && PrecioNivelRompimientosMin-NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)>=(0*Point)
                  // && PrecioNivelRompimientosMin-NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)<=(PuntosExactitudTFSecun*Point)
                  && iClose(Symbol(),TFinferior,j)>iOpen(Symbol(),TFinferior,j) /*&& MathAbs(iOpen(Symbol(),TFinferior,j)-iClose(Symbol(),TFinferior,j+1))>=(0*Point)*/
                  // && MathAbs(iOpen(Symbol(),TFinferior,j)-iClose(Symbol(),TFinferior,j+1))<=(PuntosExactitudTFSecun*Point))
                  //&& iClose(Symbol(),TFinferior,j+1)==iOpen(Symbol(),TFinferior,j)
                  && iClose(Symbol(),TFinferior,j+1)==PrecioNivelRompimientosMin
                  && MathAbs(iClose(Symbol(),TFinferior,j+1)-iOpen(Symbol(),TFinferior,j))<=PuntosExactitudTFSecun *Point)
                 {
                  sucedio=true;
                  break;
                 }
              }
            if(sucedio)
              {
               break;
              }
           }
         if(sucedio)
           {
            FiltroLinea1=IntegerToString(PosNivelRompimientoMin);
            if(REVISAR_ROMPIMIENTO_PPAL(PosNivelRompimientoMin,TFinferior))
              {
               PosicionCumpleRopturaGrande_dobleDato[0]=PosicionCumpleRopturaGrande;
               ObjectCreate(0,Linea1,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMin),PrecioNivelRompimientosMin);
               ObjectSetInteger(0,Linea1,OBJPROP_COLOR,clrBrown);
               FiltroForma1=IntegerToString(PosNivelRompimientoMin);
               PosicionesRompimientos[0]=PosNivelRompimientoMin;
               TimeFramesSecundarios[0]=TFinferior;
              }

           }
/*  else
           {
           ObjectCreate(0,Linea1,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMin),PrecioNivelRompimientosMin);
            ObjectSetInteger(0,Linea1,OBJPROP_COLOR,clrDarkGray);
           }*/
        }

      if(PosNivelRompimientoMinAnterior!=0)
        {
         bool sucedio=false;
         datetime Inicio=iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMinAnterior);
         int TFinferior=0;
         for(int i=0;i<1;i++)//ciclo de uno solo, porque estamos trabajando solo en 30 M
           {
            int VelasenTFinferior=0;
            int PosicionInicioVelasInferior=0;

            if(i==0)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecA;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecA,Inicio,true);
               TFinferior=TimeFrame_SecA;
              }
            if(i==1)
              {
               VelasenTFinferior=TimeFrame_PPAL/TimeFrame_SecB;
               PosicionInicioVelasInferior=iBarShift(Symbol(),TimeFrame_SecB,Inicio,true);
               TFinferior=TimeFrame_SecB;
              }

            for(int j=PosicionInicioVelasInferior-VelasenTFinferior;j<PosicionInicioVelasInferior;j++)
              {
               if(iClose(Symbol(),TFinferior,j+1)<iOpen(Symbol(),TFinferior,j+1) //&& PrecioNivelRompimientosMinAnterior-NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)>=(0*Point)
                  //&& PrecioNivelRompimientosMinAnterior-NormalizeDouble(iClose(Symbol(),TFinferior,j+1),Digits)<=(PuntosExactitudTFSecun*Point)
                  && iClose(Symbol(),TFinferior,j)>iOpen(Symbol(),TFinferior,j) /*&& NormalizeDouble(iOpen(Symbol(),TFinferior,j),Digits)-iClose(Symbol(),TFinferior,j+1)>=(0*Point)*/
                  // && MathAbs(NormalizeDouble(iOpen(Symbol(),TFinferior,j),Digits)-iClose(Symbol(),TFinferior,j+1))<=(PuntosExactitudTFSecun*Point))
                  //&& iClose(Symbol(),TFinferior,j+1)==iOpen(Symbol(),TFinferior,j)
                  && iClose(Symbol(),TFinferior,j+1)==PrecioNivelRompimientosMinAnterior
                  && MathAbs(iClose(Symbol(),TFinferior,j+1)-iOpen(Symbol(),TFinferior,j))<=PuntosExactitudTFSecun *Point)
                 {
                  sucedio=true;
                  break;
                 }
              }
            if(sucedio)
              {
               break;
              }

           }
         if(sucedio)
           {
            FiltroLinea2=IntegerToString(PosNivelRompimientoMinAnterior);
            if(REVISAR_ROMPIMIENTO_PPAL(PosNivelRompimientoMinAnterior,TFinferior))
              {
               PosicionCumpleRopturaGrande_dobleDato[1]=PosicionCumpleRopturaGrande;
               ObjectCreate(0,Linea2,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMinAnterior),PrecioNivelRompimientosMinAnterior);
               ObjectSetInteger(0,Linea2,OBJPROP_COLOR,clrBrown);
               FiltroForma2=IntegerToString(PosNivelRompimientoMinAnterior);
               PosicionesRompimientos[1]=PosNivelRompimientoMinAnterior;
               TimeFramesSecundarios[1]=TFinferior;
              }
            //PosicionesRompimientos[1]=PosNivelRompimientoMinAnterior;
            //TimeFramesSecundarios[1]=TFinferior;           
           }
/* else
           {
           ObjectCreate(0,Linea1,OBJ_HLINE,0,iTime(Symbol(),TimeFrame_PPAL,PosNivelRompimientoMinAnterior),PrecioNivelRompimientosMinAnterior);
            ObjectSetInteger(0,Linea1,OBJPROP_COLOR,clrDarkGray);
           }*/
        }

     }

// REVISAR_ROMPIMIENTO_PPAL(PosicionesRompimientos,TimeFramesSecundarios);

  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|             CUADRO REFERENCE                                     |
//+------------------------------------------------------------------+
void CUADRO_REFERENCE()
  {

/* if(ObjectFind(0,NameCuadro)<0)
     {
      ObjectCreate(0,NameCuadro,OBJ_RECTANGLE_LABEL,0,0,0,0,0);
      ObjectSetInteger(0,NameCuadro,OBJPROP_XDISTANCE,30);
      ObjectSetInteger(0,NameCuadro,OBJPROP_YDISTANCE,70);
      ObjectSetInteger(0,NameCuadro,OBJPROP_XSIZE,100);
      ObjectSetInteger(0,NameCuadro,OBJPROP_YSIZE,60);
      ObjectSetInteger(0,NameCuadro,OBJPROP_CORNER,2);
      ObjectSetInteger(0,NameCuadro,OBJPROP_BGCOLOR,clrBlue);
     }
   else
     {
      if(ObjectFind(0,Text1)<0)
        {
         ObjectCreate(0,Text1,OBJ_LABEL,0,0,0);
         ObjectSetInteger(0,Text1,OBJPROP_XDISTANCE,30);
         ObjectSetInteger(0,Text1,OBJPROP_YDISTANCE,50);
         ObjectSetInteger(0,Text1,OBJPROP_CORNER,2);
         ObjectSetString(0,Text1,OBJPROP_TEXT,PosNivelRompimientoMax);
         ObjectSetInteger(0,Text1,OBJPROP_COLOR,clrYellow);
        }

      if(ObjectFind(0,Text2)<0)
        {
         ObjectCreate(0,Text2,OBJ_LABEL,0,0,0);
         ObjectSetInteger(0,Text2,OBJPROP_XDISTANCE,30);
         ObjectSetInteger(0,Text2,OBJPROP_YDISTANCE,65);
         ObjectSetInteger(0,Text2,OBJPROP_CORNER,2);
         ObjectSetString(0,Text2,OBJPROP_TEXT,PosNivelRompimientoMin);
         ObjectSetInteger(0,Text2,OBJPROP_COLOR,clrYellow);
        }

      ObjectSetString(0,Text1,OBJPROP_TEXT,PosNivelRompimientoMax);
      ObjectSetString(0,Text2,OBJPROP_TEXT,PosNivelRompimientoMin);

      if(BuscamosCompras)
        {
         ComentarioSentidoMercado="Find CALL";
         ComentarioPPAL=ComentarioSentidoMercado;
         ObjectSetInteger(0,NameCuadro,OBJPROP_BGCOLOR,clrBlue);
         ObjectSetString(0,Text1,OBJPROP_TEXT,PosNivelRompimientoMax);
         ObjectSetString(0,Text2,OBJPROP_TEXT,PosNivelRompimientoMaxAnterior);

        }

      else if(BuscamosVentas)
        {
        ComentarioSentidoMercado="Find PUT";
        ComentarioPPAL=ComentarioSentidoMercado;
         ObjectSetInteger(0,NameCuadro,OBJPROP_BGCOLOR,clrRed);
         ObjectSetString(0,Text1,OBJPROP_TEXT,PosNivelRompimientoMin);
         ObjectSetString(0,Text2,OBJPROP_TEXT,PosNivelRompimientoMinAnterior);
        }
     }*/

   if(BuscamosCompras)
     {
      ComentarioSentidoMercado="Main TF: "+IntegerToString(TimeFrame_PPAL)
                               +"\nZZ- Find CALL"
                               +"\n--- Levels ---"
                               +"\nA-     : "+IntegerToString(PosNivelRompimientoMax)+" - "+IntegerToString(PosNivelRompimientoMaxAnterior)
                               +"\nB-     : "+FiltroLinea1+" - "+FiltroLinea2
                               +"\nC-     : "+FiltroForma1+" - "+FiltroForma2
                               +"\n------------"
                               +"\n0.0-   : "+IntegerToString(PuntosExactitudTFPPAL)
                               +"\n0.1-   : "+IntegerToString(PuntosExactitudTFSecun)
                               +"\n------------"
                               +"\n1-     : "+IntegerToString(CruzeNivelContrasentidoCorto)
                               +"\n2-     : "+IntegerToString(CruceNivelSentido)
                               +"\n------------"
                               +"\n7.0    : "+IntegerToString(Velas_chequeo_Zona_Lateral)
                               +"\n7.1    : "+IntegerToString(Puntos_Zona_Lateral);
/* +"\n--- Movimientos rapidos ---"
                               +"\n3.0-   : "+IntegerToString(MaxPuntosEn5Seconds)
                               +"\n3.1-   : "+IntegerToString(Segundos_A_Revisar);
                               +"\n--- Filtro H1 ---"
                               +"\n5.0-   : "+IntegerToString(Puntos_Chequeo_1HOra)
                               +"\n5.1-   : "+IntegerToString(VecesMaxToquesPermitidos);
                               +"\n--- Filtro TF 5M ---"
                               +"\n-   : "+IntegerToString(VelasChequeoTF5M_Finales)
                               +"\n-   : "+IntegerToString(VelasChequeoTF5M_iniciales)
                               +"\n-   : "+IntegerToString(PorcentajeMaximo_5Min)*/
      // +"\n6.0-   : "+IntegerToString(TamaDoji)

      ComentarioPPAL=ComentarioSentidoMercado;
     }

   else if(BuscamosVentas)
     {
      ComentarioSentidoMercado="Main TF: "+IntegerToString(TimeFrame_PPAL)
                               +"\nZZ- Find PUT"
                               +"\n--- Levels ---"
                               +"\nA-     : "+IntegerToString(PosNivelRompimientoMin)+" - "+IntegerToString(PosNivelRompimientoMinAnterior)
                               +"\nB-     : "+FiltroLinea1+" - "+FiltroLinea2
                               +"\nC-     : "+FiltroForma1+" - "+FiltroForma2
                               +"\n------------"
                               +"\n0.0-   : "+IntegerToString(PuntosExactitudTFPPAL)
                               +"\n0.1-   : "+IntegerToString(PuntosExactitudTFSecun)
                               +"\n------------"
                               +"\n1-     : "+IntegerToString(CruzeNivelContrasentidoCorto)
                               +"\n2-     : "+IntegerToString(CruceNivelSentido)
                               +"\n------------"
                               +"\n7.0    : "+IntegerToString(Velas_chequeo_Zona_Lateral)
                               +"\n7.1    : "+IntegerToString(Puntos_Zona_Lateral);
/*+"\n--- Movimientos rapidos ---"
                               +"\n3.0-   : "+IntegerToString(MaxPuntosEn5Seconds)
                               +"\n3.1-   : "+IntegerToString(Segundos_A_Revisar);
                               
                               +"\n--- Filtro H1 ---"
                               +"\n5-     : "+IntegerToString(Puntos_Chequeo_1HOra)
                               +"\n5.1-   : "+IntegerToString(VecesMaxToquesPermitidos);
                               +"\n--- Filtro TF 5M ---"
                               +"\n-   : "+IntegerToString(VelasChequeoTF5M_Finales)
                               +"\n-   : "+IntegerToString(VelasChequeoTF5M_iniciales)
                               +"\n-   : "+IntegerToString(PorcentajeMaximo_5Min);*/
      // +"\n6.0-   : "+IntegerToString(TamaDoji);

      ComentarioPPAL=ComentarioSentidoMercado;
     }
   Comment(ComentarioPPAL);

  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool REVISAR_ROMPIMIENTO_PPAL(int Posci,int TF)
  {
   bool retorno=false;

   if(Posci!=0)
     {

      if(BuscamosCompras)
        {
         double PrecioNivel=iClose(Symbol(),TimeFrame_PPAL,Posci);
         if(Posci>15)Posci=8;
         bool cumpleDistancia=false;
         bool cumpleRoturafalsaOanterior=true;
         bool RopturaLimpia=true;
         int Multiplicador=TimeFrame_PPAL/TF;
         int VelasTfInferiorRoptura=0;
         bool PasaChequeoEnTFPPAL_no_atraviesa_Nivel=true;

         for(int j=Posci-1;j>=1;j--)
           {
            if(!cumpleDistancia && iClose(Symbol(),TimeFrame_PPAL,j)-PrecioNivel>=(CruceNivelSentido*Point))
              {
               int VelaOficialRoptu=0;
               for(int k=Posci-2;k>=j;k--)
                 {
                  if(iClose(Symbol(),TimeFrame_PPAL,k)>iOpen(Symbol(),TimeFrame_PPAL,k) && iOpen(Symbol(),TimeFrame_PPAL,k)<PrecioNivel && iClose(Symbol(),TimeFrame_PPAL,k)>PrecioNivel)
                    {
                     VelaOficialRoptu=k;

                     for(int m=k-1;m>=1;m--)
                       {
                        if(iLow(Symbol(),TimeFrame_PPAL,m)<=PrecioNivel)
                          {
                           PasaChequeoEnTFPPAL_no_atraviesa_Nivel=false;
                           //Print("EN la posicion ",m," se corta el nivel");
                           break;
                          }
                       }
                     if(PasaChequeoEnTFPPAL_no_atraviesa_Nivel)
                       {
                        PosicionCumpleRopturaGrande=j;
                        VelasTfInferiorRoptura=(Multiplicador*VelaOficialRoptu)+iBarShift(Symbol(),TF,iTime(Symbol(),TimeFrame_PPAL,0));
                        //Print("La vela de roptura fue ",k," Multipli  ",Multiplicador,"  VelasTFinfe ",VelasTfInferiorRoptura,"   el precio es ",PrecioNivel," la pos ",Posci);
                        int ConteoToquesEnTFinferior=0;
                        bool CruceIni=false;

                        for(int l=0;l<Multiplicador;l++)
                          {
                           if(!CruceIni && iClose(Symbol(),TF,VelasTfInferiorRoptura-l)>PrecioNivel && iOpen(Symbol(),TF,VelasTfInferiorRoptura-l)<PrecioNivel)
                             {
                              ConteoToquesEnTFinferior++;
                              CruceIni=true;
                              continue;
                             }
                           if(CruceIni && iHigh(Symbol(),TF,VelasTfInferiorRoptura-l)>PrecioNivel && iLow(Symbol(),TF,VelasTfInferiorRoptura-l)<PrecioNivel)
                             {
                              ConteoToquesEnTFinferior++;
                             }
                          }
                        // Print("EL conteo es " ,ConteoToquesEnTFinferior);
                        if(ConteoToquesEnTFinferior>2)
                          {
                           RopturaLimpia=false;
                          }
                        break;
                       }
                    }
                 }
               cumpleDistancia=true;
               continue;
              }
            if(cumpleDistancia)
              {
               if(iLow(Symbol(),TimeFrame_PPAL,j)<=PrecioNivel)
                 {
                  cumpleRoturafalsaOanterior=false;
                  break;
                 }
              }
           }

         if(cumpleDistancia && cumpleRoturafalsaOanterior && RopturaLimpia && PasaChequeoEnTFPPAL_no_atraviesa_Nivel)
           {
            retorno=true;
            return retorno;
            Print("Me sirve este nivel para operar Compras. Nivel: ",PrecioNivel,"  posicion: ",Posci);
           }
        }

      if(BuscamosVentas)
        {
         double PrecioNivel=iClose(Symbol(),TimeFrame_PPAL,Posci);
         if(Posci>15)Posci=8;
         bool cumpleDistancia=false;
         bool cumpleRoturafalsaOanterior=true;
         bool RopturaLimpia=true;
         int Multiplicador=TimeFrame_PPAL/TF;
         int VelasTfInferiorRoptura=0;
         bool PasaChequeoEnTFPPAL_no_atraviesa_Nivel=true;

         for(int j=Posci-1;j>=1;j--)
           {
            if(!cumpleDistancia && PrecioNivel-iClose(Symbol(),TimeFrame_PPAL,j)>=(CruceNivelSentido*Point))
              {
               int VelaOficialRoptu=0;
               for(int k=Posci-2;k>=j;k--)
                 {
                  if(iClose(Symbol(),TimeFrame_PPAL,k)<iOpen(Symbol(),TimeFrame_PPAL,k) && iOpen(Symbol(),TimeFrame_PPAL,k)>PrecioNivel && iClose(Symbol(),TimeFrame_PPAL,k)<PrecioNivel)
                    {
                     VelaOficialRoptu=k;

                     for(int m=k-1;m>=1;m--)
                       {
                        if(iHigh(Symbol(),TimeFrame_PPAL,m)>=PrecioNivel)
                          {
                           PasaChequeoEnTFPPAL_no_atraviesa_Nivel=false;
                           //Print("EN la posicion ",m," se corta el nivel");
                           break;
                          }
                       }
                     if(PasaChequeoEnTFPPAL_no_atraviesa_Nivel)
                       {
                        PosicionCumpleRopturaGrande=j;
                        VelasTfInferiorRoptura=(Multiplicador*VelaOficialRoptu)+iBarShift(Symbol(),TF,iTime(Symbol(),TimeFrame_PPAL,0));
                        // Print("La vela de roptura fue ",k," Multipli  ",Multiplicador,"  VelasTFinfe ",VelasTfInferiorRoptura,"   el precio es ",PrecioNivel," la pos ",Posci);
                        int ConteoToquesEnTFinferior=0;
                        bool CruceIni=false;

                        for(int l=0;l<Multiplicador;l++)
                          {
                           if(!CruceIni && iOpen(Symbol(),TF,VelasTfInferiorRoptura-l)>PrecioNivel && iClose(Symbol(),TF,VelasTfInferiorRoptura-l)<PrecioNivel)
                             {
                              ConteoToquesEnTFinferior++;
                              CruceIni=true;
                              continue;
                             }

                           if(CruceIni && iHigh(Symbol(),TF,VelasTfInferiorRoptura-l)>PrecioNivel && iLow(Symbol(),TF,VelasTfInferiorRoptura-l)<PrecioNivel)
                             {
                              ConteoToquesEnTFinferior++;
                             }
                          }
                        //Print("EL conteo es ", ConteoToquesEnTFinferior);
                        if(ConteoToquesEnTFinferior>2)
                          {
                           RopturaLimpia=false;
                          }
                        break;
                       }
                    }
                 }

               cumpleDistancia=true;
               continue;
              }
            if(cumpleDistancia)
              {
               if(iHigh(Symbol(),TimeFrame_PPAL,j)>=PrecioNivel)
                 {
                  cumpleRoturafalsaOanterior=false;
                  break;
                 }
              }
           }

         if(cumpleDistancia && cumpleRoturafalsaOanterior && RopturaLimpia && PasaChequeoEnTFPPAL_no_atraviesa_Nivel)
           {
            retorno=true;
            return retorno;
            Print("Me sirve este nivel para operar Ventas. Nivel: ",PrecioNivel,"  posicion: ",Posci);
           }
        }
     }

   PosicionCumpleRopturaGrande=0;
   return retorno;
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool MERCADO_HABILITADO()
  {
   bool resultado=true;
/*
      Asiatico:   AUD,NZD,JPY,CAD (00:00-08:00 los asiaticos 120, los demas 95)
      Euro:       CHF,GPB,EUR,(09:00 - 20:00 )
      America:    USD
      de las  00 a las 20 pm 120 pips (eur usd no va)
      de las 20 a las 00, 95, todos con todos             
      */

   if((Hour()==14 && Minute()>30) || (Hour()>14 && Hour()<16))
     {
      resultado=false; // NO TRADE
      return resultado;
     }
// Filtro de pares de la misma zona 
/*
   if(Hour()>=00 && Hour()<08) // Horario Asiatico
     {
      if(StringFind(ZONAASIA,InicioPar,0)>=0 && StringFind(ZONAASIA,FinPar,0)>=0)
        {
         resultado=false; // NO TRADE
         return resultado;
        }*/

/*  if((StringFind(ZONAASIA,InicioPar,0)>=0 && StringFind(ZONAASIA,FinPar,0)<0) || (StringFind(ZONAASIA,InicioPar,0)<0 && StringFind(ZONAASIA,FinPar,0)>=0))
        {
         TipoHorario=2;// 120 Pips
        }*/
// }

//Filtro pares misma zona

/*if(Hour()>=09 && Hour()<20) // Horario EUROPA
     {
      if(StringFind(ZONAEURO,InicioPar,0)>=0 && StringFind(ZONAEURO,FinPar,0)>=0)
        {
         resultado=false; // NO TRADE
         return resultado;
        }

      if(Hour()>=16 && Hour()<20) // Horario AMERICA - EUROPA
        {
         if((StringFind(ZONAEURO,InicioPar,0)>=0 && StringFind(ZONAAMERICA,FinPar,0)>=0) || (StringFind(ZONAAMERICA,InicioPar,0)>=0 && StringFind(ZONAEURO,FinPar,0)>=0))
           {
            resultado=false; // NO TRADE
            return resultado;
           }
        }

/* if((StringFind(ZONAEURO,InicioPar,0)>=0 && StringFind(ZONAEURO,FinPar,0)<0) || (StringFind(ZONAEURO,InicioPar,0)<0 && StringFind(ZONAEURO,FinPar,0)>=0))
        {
         TipoHorario=2;// 120 Pips
        }*/
// }*/

/*
    if((Hour()>=9 && Hour()<23) || (Hour()==23 && Minute()<59))// de 9 hasta 
     {
      TipoHorario=2; // 120 Pips
      
      return TipoHorario;
     }
   else
     {
      TipoHorario=1; // 95 Pips
      return TipoHorario;
     }*/

   return resultado;
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void LECTURA_CUANDO_HAY_VALORES_A_ROMPER(int &Posicion[],int &Tiempo[])
  {
   int tamaS=ArraySize(Posicion);

   for(int i=0;i<tamaS;i++)
     {
      if(BuscamosCompras)
        {
         if(Posicion[i]!=0)
           {
            double ValorReferencia=iClose(Symbol(),TimeFrame_PPAL,Posicion[i]);
            int Ahora=(int)TimeCurrent();
            int NextVela=(int)iTime(Symbol(),Tiempo[i],0)+(Tiempo[i]*60);
            int Faltante=(NextVela-Ahora);
            bool Pasa=true;

            //if (Symbol()== "GBPAUD")Print ("PosicionCumpleRopturaGrande_dobleDato ",PosicionCumpleRopturaGrande_dobleDato[i]);
            if(Bid<=ValorReferencia && Faltante<MinutosEsperaMinima*60)
              {
               for(int k=0;k<ArraySize(PosicionesRompimientos);k++)
                 {
                  PosicionesRompimientos[k]=0;
                 }
              }
            if(Bid<=ValorReferencia && Alarmas[i]<3 && Faltante>MinutosEsperaMinima*60)
              {
               Pasa=VELA5M_QUE_TOCA_NIVEL_MENOR_Al_TAMA_CORRECTO(Posicion[i],1,Tiempo[i]);
               if(Pasa==true)
                 {
                  Alarmas[i]++;
                  Alert("CALL PROXIMAMENTE EN ",Symbol()," en precio ",ValorReferencia);
                  Sleep(500);
                  PlaySound("alert2.wav");
                  //MUCHOS_PIPS_5_SECONDS_PROCESA_INFO();
                 }
              }
            if(!Pasa)return;
            if(ValorReferencia-Bid>=(CruzeNivelContrasentidoCorto*Point) && Faltante>MinutosEsperaMinima*60)
              {
               if(Envio_file[i]==false)
                 {
                  if(/*PASA_CHEQUEO_TF_PPAL(PosicionCumpleRopturaGrande_dobleDato[i],Posicion[i]) &&*/  PASA_CHEQUEO_TF_5M(Posicion[i]) && PASA_FILTRO_ZONA_LATERAL(ValorReferencia,1,Tiempo[i],Posicion[i]))
                    {
                     SEND_FILE(Broker,"CALL",Tiempo[i],Serial,ValorReferencia);
                     Alert("*** CALL en ",Symbol(),"- Precio: ",ValorReferencia,"- Posicion ",Posicion[i],"- TF ",Tiempo[i]);
                     Envio_file[i]=true;
                     for(int k=0;k<ArraySize(PosicionesRompimientos);k++)
                       {
                        PosicionesRompimientos[k]=0;
                       }
                    }
                 }
              }

           }
        }

      if(BuscamosVentas)
        {
         if(Posicion[i]!=0)
           {
            double ValorReferencia=iClose(Symbol(),TimeFrame_PPAL,Posicion[i]);
            int Ahora=(int)TimeCurrent();
            int NextVela=(int)iTime(Symbol(),Tiempo[i],0)+(Tiempo[i]*60);
            int Faltante=(NextVela-Ahora);
            bool Pasa=true;

            //if (Symbol()== "EURGBP")Print ("PosicionCumpleRopturaGrande_dobleDato ",PosicionCumpleRopturaGrande_dobleDato[i]);
            if(Bid>=ValorReferencia && Faltante<MinutosEsperaMinima*60)
              {
               for(int k=0;k<ArraySize(PosicionesRompimientos);k++)
                 {
                  PosicionesRompimientos[k]=0;
                 }
              }
            if(Bid>=ValorReferencia && Alarmas[i]<3 && Faltante>MinutosEsperaMinima*60)
              {
               Pasa=VELA5M_QUE_TOCA_NIVEL_MENOR_Al_TAMA_CORRECTO(Posicion[i],-1,Tiempo[i]);
               if(Pasa==true)
                 {
                  Alarmas[i]++;
                  Alert("PUT PROXIMAMENTE EN ",Symbol(),"  en precio ",ValorReferencia);
                  Sleep(500);
                  PlaySound("alert2.wav");
                  //MUCHOS_PIPS_5_SECONDS_PROCESA_INFO();
                 }
              }
            if(!Pasa)return;
            if(Bid-ValorReferencia>=(CruzeNivelContrasentidoCorto*Point) && Faltante>MinutosEsperaMinima*60)
              {
               if(Envio_file[i]==false)
                 {
                  if(/*PASA_CHEQUEO_TF_PPAL(PosicionCumpleRopturaGrande_dobleDato[i],Posicion[i]) &&*/ PASA_CHEQUEO_TF_5M(Posicion[i]) && PASA_FILTRO_ZONA_LATERAL(ValorReferencia,-1,Tiempo[i],Posicion[i]))
                    {
                     SEND_FILE(Broker,"PUT",Tiempo[i],Serial,ValorReferencia);
                     Alert("*** PUT en ",Symbol(),"- Precio: ",ValorReferencia,"- Posicion ",Posicion[i],"- TF ",Tiempo[i]);
                     Envio_file[i]=true;
                     for(int k=0;k<ArraySize(PosicionesRompimientos);k++)
                       {
                        PosicionesRompimientos[k]=0;
                       }
                    }
                 }
              }
           }
        }
     }
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void MUCHOS_PIPS_5_SECONDS_CAPTURA_INFO()
  {
   int TC=(int)TimeCurrent();

   if(TC-SSegundos[Segundos_A_Revisar-2]>Segundos_A_Revisar)
     {
      for(int i=Segundos_A_Revisar-1;i>=1;i--)
        {
         SSegundos[i]=SSegundos[i-1];
         SPrecios[i]=SPrecios[i-1];
        }
      SSegundos[0]=TC;
      SPrecios[0]=Bid;
     }
/*

Print ("----- Fin -----");
for (int i=Segundos_A_Revisar-1;i>=0;i--)
{
Print ("Segundos ",SSegundos[i], "   Valor ",SPrecios[i]);
}
Print ("----- INICIO -----");
*/

  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void MUCHOS_PIPS_5_SECONDS_PROCESA_INFO()
  {
   bool devolucion=false;

   int TC=(int)TimeCurrent();
   double Media=MaxPuntosEn5Seconds/Segundos_A_Revisar;

   for(int i=0;i<Segundos_A_Revisar;i++)
     {
      if(TC-SSegundos[i]>=Segundos_A_Revisar)
        {
         int SegundosExactos=TC-SSegundos[i];
         double Distancia=MathAbs(Bid-SPrecios[i])/Point;
         double MediaResultante=Distancia/SegundosExactos;
         //Print (" Segundos en la posicion ",SSegundos[i],"   Media Oficial ",Media,"  TC ",TC,"   Distancia ",Distancia, "   MediaRes ",MediaResultante);

         if(MediaResultante>=Media)
           {
            devolucion=true;
            break;
           }
        }
     }

// si hay un movimiento fuerte, cancela las posiciones para evitar trades en esa hora

   if(devolucion)
     {
      for(int i=0;i<ArraySize(PosicionesRompimientos);i++)
        {
         PosicionesRompimientos[i]=0;
         TimeFramesSecundarios[i]=0;
        }
      Alert(Symbol()+" Se cancelan operaciones porq se ha dado un movimiento muy rapido P3");
     }
/*
Print ("----- Fin -----");
for (int i=Segundos_A_Revisar-1;i>=0;i--)
{
Print ("Segundos ",SSegundos[i], "   Valor ",SPrecios[i]);
}
Print ("----- INICIO -----");
*/
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool PASA_CHEQUEO_TF_PPAL(int poss,int posPPAL)
  {
   double Precio=iClose(Symbol(),TimeFrame_PPAL,poss);
   if(BuscamosCompras)
     {
      int contt=0;
      for(int i=poss-1;i>=1;i--)
        {
         if(iClose(Symbol(),TimeFrame_PPAL,i)<=Precio+(Puntos_Chequeo_1HOra*Point))
           {
            contt++;
           }
        }

      if(contt>=VecesMaxToquesPermitidos)
        {
         for(int i=0;i<ArraySize(PosicionesRompimientos);i++)
           {
            if(PosicionesRompimientos[i]==posPPAL)
              {
               PosicionesRompimientos[i]=0;
              }
           }
         Alert(Symbol()+" Se cancela CALL en precio ",Precio," X cruce instancia mayor a 3, ",contt," veces");
         return false;
        }
     }

   if(BuscamosVentas)
     {
      int contt=0;
      for(int i=poss-1;i>=1;i--)
        {
         if(iClose(Symbol(),TimeFrame_PPAL,i)>=Precio-(Puntos_Chequeo_1HOra*Point))
           {
            contt++;
           }
        }
      if(contt>=VecesMaxToquesPermitidos)
        {
         for(int i=0;i<ArraySize(PosicionesRompimientos);i++)
           {
            if(PosicionesRompimientos[i]==posPPAL)
              {
               PosicionesRompimientos[i]=0;
              }
           }
         Alert(Symbol()+" Se cancela PUT en precio ",Precio," X cruce instancia mayor a 3, ",contt," Veces");
         return false;
        }
     }
   return true;
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool PASA_CHEQUEO_TF_5M(int Poss)
  {
   double ValoresCuerposVelaAntes=0;
   double PromedioAntes=0;

   double ValoresCuerposVelaFinales=0;
   double PromedioFinales=0;

   double Porcentajefi=0;

   for(int i=VelasChequeoTF5M_Finales+VelasChequeoTF5M_iniciales;i>VelasChequeoTF5M_Finales;i--)
     {
      ValoresCuerposVelaAntes+=MathAbs(iClose(Symbol(),5,i)-iOpen(Symbol(),5,i))/Point;
     }
   PromedioAntes=ValoresCuerposVelaAntes/VelasChequeoTF5M_iniciales;

   for(int i=VelasChequeoTF5M_Finales;i>=1;i--)
     {
      ValoresCuerposVelaFinales+=MathAbs(iClose(Symbol(),5,i)-iOpen(Symbol(),5,i))/Point;
     }
   PromedioFinales=ValoresCuerposVelaFinales/VelasChequeoTF5M_Finales;

   if(PromedioAntes==0)Porcentajefi=PorcentajeMaximo_5Min-1;
   else  Porcentajefi=(PromedioFinales*100)/PromedioAntes;
   Print("Valores en Chequeo 5M ",PromedioAntes,"  ",PromedioFinales);
/* if(Porcentajefi>PorcentajeMaximo_5Min)
     {
      for(int i=0;i<ArraySize(PosicionesRompimientos);i++)
        {
         if(PosicionesRompimientos[i]==Poss)
           {
            PosicionesRompimientos[i]=0;
           }
        }
      Alert(Symbol()+" Se cancela la operacion debido a que en 5 Min no pasa el filtro P4");
      return false;
     }*/
   return true;
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void SEND_FILE(string Broker_,string Action,int TF,string Algo,double Precio)
  {
   string Comillas="\"";
   int handle=FileOpen(Symbol()+".txt",FILE_TXT|FILE_WRITE|FILE_COMMON,",");
   if(handle>0)
     {
      FileWrite(handle,"{"+Comillas+Broker_+Comillas+": [{"+Comillas+"action"+Comillas+": "+Comillas+Action+Comillas+", "
                +Comillas+"timeframe"+Comillas+": "+Comillas+IntegerToString(TF)+Comillas+", "
                +Comillas+"algoritmo"+Comillas+": "+Comillas+Algo+Comillas+"}]}");

      FileClose(handle);

      int handle2=FileOpen("BaseDatos_.txt",FILE_READ|FILE_TXT|FILE_WRITE|FILE_COMMON,",");
      if(handle2>0)
        {
         string Lineas[1]={""};
         bool Sigue=false;
         int contLineas=0;
         while(!Sigue)
           {
            Sigue=FileIsEnding(handle2);
            Lineas[contLineas]=FileReadString(handle2);
            ArrayResize(Lineas,ArraySize(Lineas)+1);
            contLineas++;
           }

         FileWrite(handle2,"Fecha: "+(string)TimeCurrent()+" PAR: "+Symbol()+" Action: "+Action+"  TF: "+IntegerToString(TF)+"  Precio: "+DoubleToString(Precio,Digits()));

         FileClose(handle2);
        }
     }

  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool VELA5M_QUE_TOCA_NIVEL_MENOR_Al_TAMA_CORRECTO(int Pos,int direccion,int TF)
  {
   string Direcc=(direccion==1)? "CALL":"PUT";
   double Precio=iClose(Symbol(),TimeFrame_PPAL,Pos);
   bool retorno=true;

   if(MathAbs(iClose(Symbol(),5,0)-iOpen(Symbol(),5,0))>(MaxPuntosEn5Minutos_VelaTocaNivel*Point))
     {
      Alert(Symbol()," Se CANCELA trade por Vela en 5 Min Mayor a ",MaxPuntosEn5Minutos_VelaTocaNivel," Puntos, En el Precio: ",Precio," en la Pos: ",Pos," - ",Direcc);
      string Mens="Fecha: "+(string)TimeCurrent()+" PAR: "+Symbol()+" Action: "+Direcc+" TF: "+IntegerToString(TF)+" Precio: "+DoubleToString(Precio,Digits());
      GUARDAR_INFO_FILTROS(Mens," Candela 5M 80P");
      for(int i=0;i<ArraySize(PosicionesRompimientos);i++)
        {
         if(PosicionesRompimientos[i]==Pos)
           {
            PosicionesRompimientos[i]=0;
           }
        }
      retorno=false;
     }

   return retorno;
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void GUARDAR_INFO_FILTROS(string Mensaje,string Filtro)
  {
   int handle2=FileOpen("NO_TRADE_.txt",FILE_READ|FILE_TXT|FILE_WRITE|FILE_COMMON,",");
   if(handle2>0)
     {
      string Lineas[1]={""};
      bool Sigue=false;
      int contLineas=0;
      while(!Sigue)
        {
         Sigue=FileIsEnding(handle2);
         Lineas[contLineas]=FileReadString(handle2);
         ArrayResize(Lineas,ArraySize(Lineas)+1);
         contLineas++;
        }

      FileWrite(handle2,Mensaje+" "+Filtro);

      FileClose(handle2);
     }
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool PASA_FILTRO_ZONA_LATERAL(double PrecioNivel,int direccion,int TF,int Pos)
  {
   string Direcc=(direccion==1)? "CALL":"PUT";

   bool retorno=true;

   double PrecioMaximo=0;
   double PrecioMinimo=1000000;

   for(int i=0;i<ArraySize(PosicionesMaximos);i++)
     {
      if(PosicionesMaximos[i]<=Velas_chequeo_Zona_Lateral)
        {
         if(PreciosMaximos[i]>PrecioMaximo)
           {
            PrecioMaximo=PreciosMaximos[i];
           }
        }
     }

   for(int i=0;i<ArraySize(PosicionesMinimas);i++)
     {
      if(PosicionesMinimas[i]<=Velas_chequeo_Zona_Lateral)
        {
         if(PreciosMinimos[i]<PrecioMinimo && PreciosMinimos[i]!=0)
           {
            PrecioMinimo=PreciosMinimos[i];
           }
        }
     }

   double ZonaLate=(PrecioMaximo-PrecioMinimo)/Point;
   Print("Zona Lateral ",ZonaLate,"  Max: ",PrecioMaximo,"  Min: ",PrecioMinimo);

   if(ZonaLate<=Puntos_Zona_Lateral)
     {
      if(PrecioNivel>=PrecioMinimo && PrecioNivel<=PrecioMaximo)
        {
         Alert(Symbol()," Se CANCELA por ZONA LATERAL en ",ZonaLate," Puntos, Precios Level: ",PrecioNivel,"  Max: ",PrecioMaximo," Min: ",PrecioMinimo," - ",Direcc);
         string Mens="Fecha: "+(string)TimeCurrent()+" PAR: "+Symbol()+" Action: "+Direcc+" TF: "+IntegerToString(TF)+" Precio: "+DoubleToString(PrecioNivel,Digits());
         GUARDAR_INFO_FILTROS(Mens," ZONA LATERAL");
         for(int i=0;i<ArraySize(PosicionesRompimientos);i++)
           {
            if(PosicionesRompimientos[i]==Pos)
              {
               PosicionesRompimientos[i]=0;
              }
           }
         retorno=false;
        }
      else
        {
         Alert(Symbol()," Se Permite Trade aunque exista ZL, el Nivel ",PrecioNivel," no esta dentro de ella");
         retorno=true;
        }
     }

   return retorno;
  }
//+------------------------------------------------------------------+
